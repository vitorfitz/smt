(set-info :smt-lib-version 2.6)
(set-logic QF_LRA)
(set-info :source |
SAL benchmark suite.  Created at SRI by Bruno Dutertre, John Rushby, Maria
Sorea, and Leonardo de Moura.  Contact demoura@csl.sri.com for more
information.

This benchmark was automatically translated into SMT-LIB format from
CVC format using CVC Lite
|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun x_0 () Bool)
(declare-fun x_1 () Bool)
(declare-fun x_2 () Bool)
(declare-fun x_3 () Bool)
(declare-fun x_4 () Bool)
(declare-fun x_5 () Bool)
(declare-fun x_6 () Real)
(declare-fun x_7 () Real)
(declare-fun x_8 () Real)
(declare-fun x_9 () Real)
(declare-fun x_10 () Real)
(declare-fun x_11 () Real)
(declare-fun x_12 () Bool)
(declare-fun x_13 () Bool)
(declare-fun x_14 () Real)
(declare-fun x_15 () Bool)
(declare-fun x_16 () Bool)
(declare-fun x_17 () Bool)
(declare-fun x_18 () Bool)
(declare-fun x_19 () Bool)
(declare-fun x_20 () Bool)
(declare-fun x_21 () Bool)
(declare-fun x_22 () Real)
(declare-fun x_23 () Bool)
(declare-fun x_24 () Bool)
(declare-fun x_25 () Real)
(declare-fun x_26 () Real)
(declare-fun x_27 () Real)
(declare-fun x_28 () Bool)
(declare-fun x_29 () Bool)
(declare-fun x_30 () Real)
(declare-fun x_31 () Bool)
(declare-fun x_32 () Bool)
(declare-fun x_33 () Real)
(declare-fun x_34 () Real)
(declare-fun x_35 () Bool)
(declare-fun x_36 () Bool)
(declare-fun x_37 () Real)
(declare-fun x_38 () Bool)
(declare-fun x_39 () Bool)
(declare-fun x_40 () Bool)
(declare-fun x_41 () Bool)
(declare-fun x_42 () Bool)
(declare-fun x_43 () Bool)
(declare-fun x_44 () Real)
(declare-fun x_45 () Bool)
(declare-fun x_46 () Bool)
(declare-fun x_47 () Real)
(declare-fun x_48 () Real)
(declare-fun x_49 () Real)
(declare-fun x_50 () Real)
(declare-fun x_51 () Real)
(declare-fun x_52 () Real)
(declare-fun x_53 () Bool)
(declare-fun x_54 () Bool)
(declare-fun x_55 () Real)
(declare-fun x_56 () Bool)
(declare-fun x_57 () Bool)
(declare-fun x_58 () Bool)
(declare-fun x_59 () Bool)
(declare-fun x_60 () Bool)
(declare-fun x_61 () Bool)
(declare-fun x_62 () Real)
(declare-fun x_63 () Bool)
(declare-fun x_64 () Bool)
(declare-fun x_65 () Real)
(declare-fun x_66 () Real)
(declare-fun x_67 () Real)
(declare-fun x_68 () Real)
(declare-fun x_69 () Real)
(assert (let ((?v_32 (+ x_37 x_8)) (?v_23 (+ x_47 x_8)) (?v_26 (= x_52 x_34)) (?v_2 (not x_53))) (let ((?v_4 (and ?v_2 x_54)) (?v_31 (= x_55 x_37)) (?v_24 (and (= x_56 x_38) (= x_57 x_39))) (?v_9 (= x_48 1)) (?v_33 (and (= x_58 x_40) (= x_59 x_41))) (?v_12 (and (= x_60 x_42) (= x_61 x_43))) (?v_5 (= x_62 x_44)) (?v_14 (not x_63))) (let ((?v_16 (and ?v_14 x_64)) (?v_17 (= x_65 0)) (?v_21 (= x_65 x_47)) (?v_0 (= x_48 0)) (?v_11 (+ x_44 x_8)) (?v_28 (= x_55 0)) (?v_60 (+ x_14 x_7)) (?v_53 (+ x_25 x_7)) (?v_56 (= x_34 x_10)) (?v_36 (not x_35))) (let ((?v_38 (and ?v_36 x_36)) (?v_59 (= x_37 x_14)) (?v_54 (and (= x_38 x_15) (= x_39 x_16))) (?v_41 (= x_26 1)) (?v_61 (and (= x_40 x_18) (= x_41 x_19))) (?v_44 (and (= x_42 x_20) (= x_43 x_21))) (?v_39 (= x_44 x_22)) (?v_46 (not x_45))) (let ((?v_48 (and ?v_46 x_46)) (?v_49 (= x_47 0)) (?v_51 (= x_47 x_25)) (?v_34 (= x_26 0)) (?v_43 (+ x_22 x_7)) (?v_58 (= x_37 0)) (?v_70 (+ 0 x_6)) (?v_82 (= x_10 x_11)) (?v_65 (not x_12))) (let ((?v_67 (and ?v_65 x_13)) (?v_83 (= x_14 0)) (?v_79 (and (= x_15 x_2) (= x_16 x_3))) (?v_84 (and (= x_18 x_4) (= x_19 x_5))) (?v_71 (and (= x_20 x_0) (= x_21 x_1))) (?v_66 (= x_22 0)) (?v_74 (not x_23))) (let ((?v_76 (and ?v_74 x_24)) (?v_75 (= x_25 0)) (?v_64 (not x_17)) (?v_62 (not x_0)) (?v_63 (not x_1)) (?v_72 (not x_2)) (?v_73 (not x_3)) (?v_80 (not x_4)) (?v_81 (not x_5)) (?v_3 (not x_42)) (?v_1 (not x_43)) (?v_6 (not x_54)) (?v_8 (not x_61)) (?v_7 (not x_60)) (?v_15 (not x_38)) (?v_13 (not x_39)) (?v_20 (not x_57)) (?v_18 (not x_64)) (?v_19 (not x_56)) (?v_27 (not x_40)) (?v_25 (not x_41)) (?v_30 (not x_59)) (?v_29 (not x_58)) (?v_37 (not x_20)) (?v_35 (not x_21)) (?v_40 (not x_36)) (?v_47 (not x_15)) (?v_45 (not x_16)) (?v_50 (not x_46)) (?v_57 (not x_18)) (?v_55 (not x_19)) (?v_68 (not x_13)) (?v_77 (not x_24)) (?v_10 (<= ?v_11 5)) (?v_22 (<= ?v_23 1)) (?v_42 (<= ?v_43 5)) (?v_52 (<= ?v_53 1)) (?v_69 (<= ?v_70 5)) (?v_78 (<= ?v_70 1))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (<= x_66 1) (>= x_66 0)) (<= x_48 1)) (>= x_48 0)) (<= x_26 1)) (>= x_26 0)) (and ?v_62 ?v_63)) (and ?v_72 ?v_73)) (and ?v_80 ?v_81)) (not (< x_9 0))) (not (< x_8 0))) (not (< x_7 0))) (not (< x_6 0))) (= x_66 (ite ?v_9 0 1))) (or (or (or (or (or (and (and (and (and (and (and (and (and (= x_67 0) ?v_0) ?v_3) ?v_1) ?v_2) ?v_6) x_60) ?v_8) (= x_62 0)) (and (and (and (and (and (and (and (and (= x_67 1) ?v_0) x_42) ?v_1) (not (<= x_44 2))) ?v_4) ?v_7) x_61) ?v_5)) (and (and (and (and (and (and (and (= x_67 2) ?v_0) ?v_3) x_43) ?v_4) x_60) x_61) ?v_5)) (and (and (and (and (and (and (and (and (= x_67 3) ?v_0) x_42) x_43) x_53) ?v_6) ?v_7) ?v_8) ?v_5)) (and (and (and (and (and (and (and (and (= x_67 4) ?v_9) (or (or ?v_3 x_43) ?v_10)) (or (or x_42 ?v_1) ?v_10)) (or (or ?v_3 ?v_1) ?v_10)) (= x_62 ?v_11)) (= x_53 x_35)) (= x_54 x_36)) ?v_12)) (and (and (and (and (= x_67 5) ?v_0) ?v_5) ?v_4) ?v_12))) (or (or (or (or (or (and (and (and (and (and (and (and (and (and (= x_68 0) ?v_0) ?v_15) ?v_13) ?v_2) ?v_6) ?v_16) x_56) ?v_20) ?v_17) (and (and (and (and (and (and (and (and (and (= x_68 1) ?v_0) x_38) ?v_13) (= x_47 1)) ?v_14) ?v_18) ?v_19) x_57) ?v_21)) (and (and (and (and (and (and (and (and (and (= x_68 2) ?v_0) ?v_15) x_39) x_53) ?v_6) ?v_16) x_56) x_57) ?v_17)) (and (and (and (and (and (and (and (and (= x_68 3) ?v_0) x_38) x_39) x_63) ?v_18) ?v_19) ?v_20) ?v_21)) (and (and (and (and (and (and (and (= x_68 4) ?v_9) (or (or ?v_15 x_39) ?v_22)) (or (or ?v_15 ?v_13) ?v_22)) (= x_65 ?v_23)) (= x_63 x_45)) (= x_64 x_46)) ?v_24)) (and (and (and (and (and (and (= x_68 5) ?v_0) ?v_2) x_54) ?v_21) ?v_16) ?v_24))) (or (or (or (or (or (and (and (and (and (and (and (and (and (and (= x_69 0) ?v_0) ?v_27) ?v_25) ?v_14) ?v_18) x_58) ?v_30) ?v_28) ?v_26) (and (and (and (and (and (and (and (= x_69 1) ?v_0) x_40) ?v_25) ?v_29) x_59) ?v_26) ?v_31)) (and (and (and (and (and (and (and (and (and (= x_69 2) ?v_0) ?v_27) x_41) x_63) ?v_18) x_58) x_59) ?v_28) ?v_26)) (and (and (and (and (and (and (and (and (= x_69 3) ?v_0) x_40) x_41) (not (< x_37 1))) ?v_29) ?v_30) ?v_26) ?v_31)) (and (and (and (and (and (and (= x_69 4) ?v_9) (or (or ?v_27 x_41) (<= ?v_32 1))) (or (or ?v_27 ?v_25) (<= ?v_32 2))) (= x_55 ?v_32)) ?v_33) ?v_26)) (and (and (and (and (and (and (= x_69 5) ?v_0) ?v_14) x_64) ?v_31) ?v_33) ?v_26))) (= x_48 (ite ?v_41 0 1))) (or (or (or (or (or (and (and (and (and (and (and (and (and (= x_49 0) ?v_34) ?v_37) ?v_35) ?v_36) ?v_40) x_42) ?v_1) (= x_44 0)) (and (and (and (and (and (and (and (and (= x_49 1) ?v_34) x_20) ?v_35) (not (<= x_22 2))) ?v_38) ?v_3) x_43) ?v_39)) (and (and (and (and (and (and (and (= x_49 2) ?v_34) ?v_37) x_21) ?v_38) x_42) x_43) ?v_39)) (and (and (and (and (and (and (and (and (= x_49 3) ?v_34) x_20) x_21) x_35) ?v_40) ?v_3) ?v_1) ?v_39)) (and (and (and (and (and (and (and (and (= x_49 4) ?v_41) (or (or ?v_37 x_21) ?v_42)) (or (or x_20 ?v_35) ?v_42)) (or (or ?v_37 ?v_35) ?v_42)) (= x_44 ?v_43)) (= x_35 x_12)) (= x_36 x_13)) ?v_44)) (and (and (and (and (= x_49 5) ?v_34) ?v_39) ?v_38) ?v_44))) (or (or (or (or (or (and (and (and (and (and (and (and (and (and (= x_50 0) ?v_34) ?v_47) ?v_45) ?v_36) ?v_40) ?v_48) x_38) ?v_13) ?v_49) (and (and (and (and (and (and (and (and (and (= x_50 1) ?v_34) x_15) ?v_45) (= x_25 1)) ?v_46) ?v_50) ?v_15) x_39) ?v_51)) (and (and (and (and (and (and (and (and (and (= x_50 2) ?v_34) ?v_47) x_16) x_35) ?v_40) ?v_48) x_38) x_39) ?v_49)) (and (and (and (and (and (and (and (and (= x_50 3) ?v_34) x_15) x_16) x_45) ?v_50) ?v_15) ?v_13) ?v_51)) (and (and (and (and (and (and (and (= x_50 4) ?v_41) (or (or ?v_47 x_16) ?v_52)) (or (or ?v_47 ?v_45) ?v_52)) (= x_47 ?v_53)) (= x_45 x_23)) (= x_46 x_24)) ?v_54)) (and (and (and (and (and (and (= x_50 5) ?v_34) ?v_36) x_36) ?v_51) ?v_48) ?v_54))) (or (or (or (or (or (and (and (and (and (and (and (and (and (and (= x_51 0) ?v_34) ?v_57) ?v_55) ?v_46) ?v_50) x_40) ?v_25) ?v_58) ?v_56) (and (and (and (and (and (and (and (= x_51 1) ?v_34) x_18) ?v_55) ?v_27) x_41) ?v_56) ?v_59)) (and (and (and (and (and (and (and (and (and (= x_51 2) ?v_34) ?v_57) x_19) x_45) ?v_50) x_40) x_41) ?v_58) ?v_56)) (and (and (and (and (and (and (and (and (= x_51 3) ?v_34) x_18) x_19) (not (< x_14 1))) ?v_27) ?v_25) ?v_56) ?v_59)) (and (and (and (and (and (and (= x_51 4) ?v_41) (or (or ?v_57 x_19) (<= ?v_60 1))) (or (or ?v_57 ?v_55) (<= ?v_60 2))) (= x_37 ?v_60)) ?v_61) ?v_56)) (and (and (and (and (and (and (= x_51 5) ?v_34) ?v_46) x_46) ?v_59) ?v_61) ?v_56))) (= x_26 (ite x_17 0 1))) (or (or (or (or (or (and (and (and (and (and (and (and (and (= x_27 0) ?v_64) ?v_62) ?v_63) ?v_65) ?v_68) x_20) ?v_35) ?v_66) (and (and (and (and (and (and (and (and (= x_27 1) ?v_64) x_0) ?v_63) (not (<= 0 2))) ?v_67) ?v_37) x_21) ?v_66)) (and (and (and (and (and (and (and (= x_27 2) ?v_64) ?v_62) x_1) ?v_67) x_20) x_21) ?v_66)) (and (and (and (and (and (and (and (and (= x_27 3) ?v_64) x_0) x_1) x_12) ?v_68) ?v_37) ?v_35) ?v_66)) (and (and (and (and (and (and (and (and (= x_27 4) x_17) (or (or ?v_62 x_1) ?v_69)) (or (or x_0 ?v_63) ?v_69)) (or (or ?v_62 ?v_63) ?v_69)) (= x_22 ?v_70)) (= x_12 x_28)) (= x_13 x_29)) ?v_71)) (and (and (and (and (= x_27 5) ?v_64) ?v_66) ?v_67) ?v_71))) (or (or (or (or (or (and (and (and (and (and (and (and (and (and (= x_30 0) ?v_64) ?v_72) ?v_73) ?v_65) ?v_68) ?v_76) x_15) ?v_45) ?v_75) (and (and (and (and (and (and (and (and (and (= x_30 1) ?v_64) x_2) ?v_73) (= 0 1)) ?v_74) ?v_77) ?v_47) x_16) ?v_75)) (and (and (and (and (and (and (and (and (and (= x_30 2) ?v_64) ?v_72) x_3) x_12) ?v_68) ?v_76) x_15) x_16) ?v_75)) (and (and (and (and (and (and (and (and (= x_30 3) ?v_64) x_2) x_3) x_23) ?v_77) ?v_47) ?v_45) ?v_75)) (and (and (and (and (and (and (and (= x_30 4) x_17) (or (or ?v_72 x_3) ?v_78)) (or (or ?v_72 ?v_73) ?v_78)) (= x_25 ?v_70)) (= x_23 x_31)) (= x_24 x_32)) ?v_79)) (and (and (and (and (and (and (= x_30 5) ?v_64) ?v_65) x_13) ?v_75) ?v_76) ?v_79))) (or (or (or (or (or (and (and (and (and (and (and (and (and (and (= x_33 0) ?v_64) ?v_80) ?v_81) ?v_74) ?v_77) x_18) ?v_55) ?v_83) ?v_82) (and (and (and (and (and (and (and (= x_33 1) ?v_64) x_4) ?v_81) ?v_57) x_19) ?v_82) ?v_83)) (and (and (and (and (and (and (and (and (and (= x_33 2) ?v_64) ?v_80) x_5) x_23) ?v_77) x_18) x_19) ?v_83) ?v_82)) (and (and (and (and (and (and (and (and (= x_33 3) ?v_64) x_4) x_5) (not (< 0 1))) ?v_57) ?v_55) ?v_82) ?v_83)) (and (and (and (and (and (and (= x_33 4) x_17) (or (or ?v_80 x_5) ?v_78)) (or (or ?v_80 ?v_81) (<= ?v_70 2))) (= x_14 ?v_70)) ?v_84) ?v_82)) (and (and (and (and (and (and (= x_33 5) ?v_64) ?v_74) x_24) ?v_83) ?v_84) ?v_82))) (or (or (or (and (and ?v_7 x_61) (or x_58 ?v_30)) (and (and ?v_3 x_43) (or x_40 ?v_25))) (and (and ?v_37 x_21) (or x_18 ?v_55))) (and (and ?v_62 x_1) (or x_4 ?v_81)))) (or ?v_68 ?v_65)) (or ?v_77 ?v_74)) (or (not x_29) (not x_28))) (or (not x_32) (not x_31))) (or ?v_40 ?v_36)) (or ?v_50 ?v_46)) (or ?v_6 ?v_2)) (or ?v_18 ?v_14))))))))))
(check-sat)
(exit)
