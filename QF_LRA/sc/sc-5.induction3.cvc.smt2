(set-info :smt-lib-version 2.6)
(set-logic QF_LRA)
(set-info :source |
Fully parameterized specification and verification of a synchronizer   
circuit modeling metastability at various levels of refinement.     
A paper describing this specification, to be published in Designing     
Correct Circuits (DCC), 2006, is available from the authors.            

Geoffrey Brown, Indiana University <geobrown@cs.indiana.edu>
Lee Pike, Galois Connections, Inc. <leepike@galois.com>

Translated into CVC format by Leonardo de Moura.

This benchmark was automatically translated into SMT-LIB format from
CVC format using CVC Lite

|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun x_0 () Bool)
(declare-fun x_1 () Bool)
(declare-fun x_2 () Real)
(declare-fun x_3 () Real)
(declare-fun x_4 () Bool)
(declare-fun x_5 () Bool)
(declare-fun x_6 () Real)
(declare-fun x_7 () Real)
(declare-fun x_8 () Bool)
(declare-fun x_9 () Bool)
(declare-fun x_10 () Real)
(declare-fun x_11 () Real)
(declare-fun x_12 () Bool)
(declare-fun x_13 () Bool)
(declare-fun x_14 () Real)
(declare-fun x_15 () Real)
(declare-fun x_16 () Bool)
(declare-fun x_17 () Bool)
(declare-fun x_18 () Real)
(declare-fun x_19 () Real)
(declare-fun x_20 () Bool)
(declare-fun x_21 () Bool)
(declare-fun x_22 () Bool)
(declare-fun x_23 () Bool)
(declare-fun x_24 () Real)
(declare-fun x_25 () Real)
(declare-fun x_26 () Real)
(declare-fun x_27 () Real)
(declare-fun x_28 () Bool)
(declare-fun x_29 () Bool)
(declare-fun x_30 () Bool)
(declare-fun x_31 () Bool)
(declare-fun x_32 () Real)
(declare-fun x_33 () Real)
(declare-fun x_34 () Real)
(declare-fun x_35 () Real)
(declare-fun x_36 () Bool)
(declare-fun x_37 () Bool)
(declare-fun x_38 () Bool)
(declare-fun x_39 () Bool)
(declare-fun x_40 () Real)
(declare-fun x_41 () Real)
(declare-fun x_42 () Real)
(declare-fun x_43 () Real)
(declare-fun x_44 () Bool)
(declare-fun x_45 () Bool)
(declare-fun x_46 () Bool)
(declare-fun x_47 () Bool)
(declare-fun x_48 () Real)
(declare-fun x_49 () Real)
(declare-fun x_50 () Real)
(declare-fun x_51 () Real)
(declare-fun x_52 () Bool)
(declare-fun x_53 () Bool)
(declare-fun x_54 () Bool)
(declare-fun x_55 () Bool)
(declare-fun x_56 () Real)
(declare-fun x_57 () Real)
(declare-fun x_58 () Real)
(declare-fun x_59 () Real)
(declare-fun x_60 () Bool)
(declare-fun x_61 () Bool)
(declare-fun x_62 () Bool)
(declare-fun x_63 () Bool)
(declare-fun x_64 () Bool)
(declare-fun x_65 () Bool)
(declare-fun x_66 () Real)
(declare-fun x_67 () Real)
(declare-fun x_68 () Real)
(declare-fun x_69 () Real)
(declare-fun x_70 () Real)
(declare-fun x_71 () Real)
(declare-fun x_72 () Real)
(declare-fun x_73 () Real)
(declare-fun x_74 () Real)
(declare-fun x_75 () Real)
(declare-fun x_76 () Real)
(declare-fun x_77 () Real)
(declare-fun x_78 () Real)
(declare-fun x_79 () Real)
(declare-fun x_80 () Real)
(declare-fun x_81 () Real)
(declare-fun x_82 () Real)
(declare-fun x_83 () Real)
(declare-fun x_84 () Real)
(declare-fun x_85 () Real)
(declare-fun x_86 () Real)
(declare-fun x_87 () Real)
(declare-fun x_88 () Real)
(declare-fun x_89 () Real)
(declare-fun x_90 () Real)
(declare-fun x_91 () Real)
(declare-fun x_92 () Real)
(declare-fun x_93 () Real)
(declare-fun x_94 () Real)
(declare-fun x_95 () Real)
(declare-fun x_96 () Real)
(declare-fun x_97 () Real)
(declare-fun x_98 () Real)
(declare-fun x_99 () Real)
(declare-fun x_100 () Real)
(declare-fun x_101 () Real)
(declare-fun x_102 () Real)
(declare-fun x_103 () Real)
(declare-fun x_104 () Real)
(declare-fun x_105 () Real)
(declare-fun x_106 () Real)
(assert (let ((?v_63 (= x_33 x_25)) (?v_64 (= x_26 x_34)) (?v_65 (= x_35 x_27)) (?v_61 (= x_24 x_32))) (let ((?v_66 (not ?v_61)) (?v_69 (= x_70 x_71)) (?v_57 (= x_28 x_20)) (?v_58 (= x_7 x_3)) (?v_62 (ite (<= x_26 x_24) x_26 x_24)) (?v_56 (ite (<= x_24 x_26) x_24 x_26)) (?v_49 (= x_41 x_33)) (?v_50 (= x_34 x_42)) (?v_51 (= x_43 x_35)) (?v_47 (= x_32 x_40))) (let ((?v_52 (not ?v_47)) (?v_55 (= x_81 x_70)) (?v_43 (= x_36 x_28)) (?v_44 (= x_11 x_7)) (?v_48 (ite (<= x_34 x_32) x_34 x_32)) (?v_42 (ite (<= x_32 x_34) x_32 x_34)) (?v_35 (= x_49 x_41)) (?v_36 (= x_42 x_50)) (?v_37 (= x_51 x_43)) (?v_33 (= x_40 x_48))) (let ((?v_38 (not ?v_33)) (?v_41 (= x_87 x_81)) (?v_29 (= x_44 x_36)) (?v_30 (= x_15 x_11)) (?v_34 (ite (<= x_42 x_40) x_42 x_40)) (?v_28 (ite (<= x_40 x_42) x_40 x_42)) (?v_21 (= x_57 x_49)) (?v_22 (= x_50 x_58)) (?v_23 (= x_59 x_51)) (?v_19 (= x_48 x_56))) (let ((?v_24 (not ?v_19)) (?v_27 (= x_93 x_87)) (?v_15 (= x_52 x_44)) (?v_16 (= x_19 x_15)) (?v_20 (ite (<= x_50 x_48) x_50 x_48)) (?v_14 (ite (<= x_48 x_50) x_48 x_50)) (?v_7 (= x_67 x_57)) (?v_8 (= x_58 x_68)) (?v_9 (= x_69 x_59)) (?v_5 (= x_56 x_66))) (let ((?v_10 (not ?v_5)) (?v_13 (= x_99 x_93)) (?v_1 (= x_60 x_52)) (?v_2 (= x_100 x_19)) (?v_6 (ite (<= x_58 x_56) x_58 x_56)) (?v_0 (ite (<= x_56 x_58) x_56 x_58)) (?v_70 (xor x_62 x_63)) (?v_3 (not x_52)) (?v_17 (not x_44)) (?v_31 (not x_36)) (?v_45 (not x_28)) (?v_59 (not x_20)) (?v_4 (= x_63 x_17)) (?v_12 (= x_19 x_100)) (?v_18 (= x_17 x_13)) (?v_26 (= x_15 x_19)) (?v_32 (= x_13 x_9)) (?v_40 (= x_11 x_15)) (?v_46 (= x_9 x_5)) (?v_54 (= x_7 x_11)) (?v_60 (= x_5 x_1)) (?v_68 (= x_3 x_7))) (let ((?v_11 (+ ?v_6 x_74)) (?v_25 (+ ?v_20 x_74)) (?v_39 (+ ?v_34 x_74)) (?v_53 (+ ?v_48 x_74)) (?v_67 (+ ?v_62 x_74))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (> x_72 0) (> x_73 0)) (>= x_74 0)) (< x_74 x_72)) (< x_74 x_73)) (>= x_79 0)) (< x_79 x_72)) (< x_79 x_73)) (or (= x_16 x_17) (= x_18 x_19))) (or (= x_12 x_13) (= x_14 x_15))) (or (= x_8 x_9) (= x_10 x_11))) (or (= x_4 x_5) (= x_6 x_7))) (or (= x_0 x_1) (= x_2 x_3))) (<= (+ (+ (+ (+ (+ (+ (+ (ite (xor x_60 x_61) 1 0) (ite (xor x_61 x_62) 1 0)) (ite ?v_70 1 0)) (ite (xor x_63 x_64) 1 0)) (ite (xor x_64 x_65) 1 0)) (ite (xor x_65 (not x_60)) 1 0)) (ite (and (= x_60 x_61) (< x_66 x_67)) 1 0)) (ite (and (= x_63 x_64) (< x_68 x_69)) 1 0)) 1)) (<= (+ (+ (+ (+ (+ (+ (+ (ite (xor x_52 x_53) 1 0) (ite (xor x_53 x_16) 1 0)) (ite (xor x_16 x_17) 1 0)) (ite (xor x_17 x_54) 1 0)) (ite (xor x_54 x_55) 1 0)) (ite (xor x_55 ?v_3) 1 0)) (ite (and (= x_52 x_53) (< x_56 x_57)) 1 0)) (ite (and (= x_17 x_54) (< x_58 x_59)) 1 0)) 1)) (<= (+ (+ (+ (+ (+ (+ (+ (ite (xor x_44 x_45) 1 0) (ite (xor x_45 x_12) 1 0)) (ite (xor x_12 x_13) 1 0)) (ite (xor x_13 x_46) 1 0)) (ite (xor x_46 x_47) 1 0)) (ite (xor x_47 ?v_17) 1 0)) (ite (and (= x_44 x_45) (< x_48 x_49)) 1 0)) (ite (and (= x_13 x_46) (< x_50 x_51)) 1 0)) 1)) (<= (+ (+ (+ (+ (+ (+ (+ (ite (xor x_36 x_37) 1 0) (ite (xor x_37 x_8) 1 0)) (ite (xor x_8 x_9) 1 0)) (ite (xor x_9 x_38) 1 0)) (ite (xor x_38 x_39) 1 0)) (ite (xor x_39 ?v_31) 1 0)) (ite (and (= x_36 x_37) (< x_40 x_41)) 1 0)) (ite (and (= x_9 x_38) (< x_42 x_43)) 1 0)) 1)) (<= (+ (+ (+ (+ (+ (+ (+ (ite (xor x_28 x_29) 1 0) (ite (xor x_29 x_4) 1 0)) (ite (xor x_4 x_5) 1 0)) (ite (xor x_5 x_30) 1 0)) (ite (xor x_30 x_31) 1 0)) (ite (xor x_31 ?v_45) 1 0)) (ite (and (= x_28 x_29) (< x_32 x_33)) 1 0)) (ite (and (= x_5 x_30) (< x_34 x_35)) 1 0)) 1)) (<= (+ (+ (+ (+ (+ (+ (+ (ite (xor x_20 x_21) 1 0) (ite (xor x_21 x_0) 1 0)) (ite (xor x_0 x_1) 1 0)) (ite (xor x_1 x_22) 1 0)) (ite (xor x_22 x_23) 1 0)) (ite (xor x_23 ?v_59) 1 0)) (ite (and (= x_20 x_21) (< x_24 x_25)) 1 0)) (ite (and (= x_1 x_22) (< x_26 x_27)) 1 0)) 1)) (or (and (and (and (and (and (and (and (and (and (= x_101 0) (= x_62 x_53)) (= ?v_0 x_56)) (<= (+ ?v_0 x_72) x_66)) (or ?v_4 (= x_63 x_16))) (= x_64 x_54)) (= x_65 x_55)) (= x_68 x_58)) ?v_1) ?v_2) (and (and (and (and (and (and (and (and (and (= x_101 1) (= x_65 x_54)) (= ?v_0 x_58)) (<= (+ ?v_0 x_73) x_68)) (or (and (and (= x_102 0) ?v_1) ?v_2) (and (and (= x_102 1) (= x_52 x_55)) (= x_60 ?v_3)))) (= x_61 x_53)) (= x_62 x_16)) (= x_103 x_18)) (= x_66 x_56)) ?v_4))) (or (or (and (and (and (= x_104 0) ?v_10) (or (not (<= x_57 ?v_6)) (= x_61 x_52))) ?v_7) (and (and (and (= x_104 1) ?v_5) (xor x_52 x_60)) (= x_67 ?v_11))) (and (and (and (= x_104 2) ?v_5) (= x_52 x_60)) ?v_7))) (or (or (and (and (and (= x_105 0) (not ?v_8)) (or (not (<= x_59 ?v_0)) (= x_64 x_17))) ?v_9) (and (and (and (= x_105 1) ?v_8) (xor x_17 x_63)) (= x_69 (+ ?v_0 x_79)))) (and (and (and (= x_105 2) ?v_8) (= x_17 x_63)) ?v_9))) (or (or (and (and (and (= x_106 0) ?v_10) (or (not (<= x_93 ?v_6)) (= x_103 x_19))) ?v_13) (and (and (and (= x_106 1) ?v_5) (not ?v_12)) (= x_99 ?v_11))) (and (and (and (= x_106 2) ?v_5) ?v_12) ?v_13))) (or (and (and (and (and (and (and (and (and (and (= x_94 0) (= x_16 x_45)) (= ?v_14 x_48)) (<= (+ ?v_14 x_72) x_56)) (or ?v_18 (= x_17 x_12))) (= x_54 x_46)) (= x_55 x_47)) (= x_58 x_50)) ?v_15) ?v_16) (and (and (and (and (and (and (and (and (and (= x_94 1) (= x_55 x_46)) (= ?v_14 x_50)) (<= (+ ?v_14 x_73) x_58)) (or (and (and (= x_95 0) ?v_15) ?v_16) (and (and (= x_95 1) (= x_44 x_47)) (= x_52 ?v_17)))) (= x_53 x_45)) (= x_16 x_12)) (= x_18 x_14)) (= x_56 x_48)) ?v_18))) (or (or (and (and (and (= x_96 0) ?v_24) (or (not (<= x_49 ?v_20)) (= x_53 x_44))) ?v_21) (and (and (and (= x_96 1) ?v_19) (xor x_44 x_52)) (= x_57 ?v_25))) (and (and (and (= x_96 2) ?v_19) (= x_44 x_52)) ?v_21))) (or (or (and (and (and (= x_97 0) (not ?v_22)) (or (not (<= x_51 ?v_14)) (= x_54 x_13))) ?v_23) (and (and (and (= x_97 1) ?v_22) (xor x_13 x_17)) (= x_59 (+ ?v_14 x_79)))) (and (and (and (= x_97 2) ?v_22) (= x_13 x_17)) ?v_23))) (or (or (and (and (and (= x_98 0) ?v_24) (or (not (<= x_87 ?v_20)) (= x_18 x_15))) ?v_27) (and (and (and (= x_98 1) ?v_19) (not ?v_26)) (= x_93 ?v_25))) (and (and (and (= x_98 2) ?v_19) ?v_26) ?v_27))) (or (and (and (and (and (and (and (and (and (and (= x_88 0) (= x_12 x_37)) (= ?v_28 x_40)) (<= (+ ?v_28 x_72) x_48)) (or ?v_32 (= x_13 x_8))) (= x_46 x_38)) (= x_47 x_39)) (= x_50 x_42)) ?v_29) ?v_30) (and (and (and (and (and (and (and (and (and (= x_88 1) (= x_47 x_38)) (= ?v_28 x_42)) (<= (+ ?v_28 x_73) x_50)) (or (and (and (= x_89 0) ?v_29) ?v_30) (and (and (= x_89 1) (= x_36 x_39)) (= x_44 ?v_31)))) (= x_45 x_37)) (= x_12 x_8)) (= x_14 x_10)) (= x_48 x_40)) ?v_32))) (or (or (and (and (and (= x_90 0) ?v_38) (or (not (<= x_41 ?v_34)) (= x_45 x_36))) ?v_35) (and (and (and (= x_90 1) ?v_33) (xor x_36 x_44)) (= x_49 ?v_39))) (and (and (and (= x_90 2) ?v_33) (= x_36 x_44)) ?v_35))) (or (or (and (and (and (= x_91 0) (not ?v_36)) (or (not (<= x_43 ?v_28)) (= x_46 x_9))) ?v_37) (and (and (and (= x_91 1) ?v_36) (xor x_9 x_13)) (= x_51 (+ ?v_28 x_79)))) (and (and (and (= x_91 2) ?v_36) (= x_9 x_13)) ?v_37))) (or (or (and (and (and (= x_92 0) ?v_38) (or (not (<= x_81 ?v_34)) (= x_14 x_11))) ?v_41) (and (and (and (= x_92 1) ?v_33) (not ?v_40)) (= x_87 ?v_39))) (and (and (and (= x_92 2) ?v_33) ?v_40) ?v_41))) (or (and (and (and (and (and (and (and (and (and (= x_82 0) (= x_8 x_29)) (= ?v_42 x_32)) (<= (+ ?v_42 x_72) x_40)) (or ?v_46 (= x_9 x_4))) (= x_38 x_30)) (= x_39 x_31)) (= x_42 x_34)) ?v_43) ?v_44) (and (and (and (and (and (and (and (and (and (= x_82 1) (= x_39 x_30)) (= ?v_42 x_34)) (<= (+ ?v_42 x_73) x_42)) (or (and (and (= x_83 0) ?v_43) ?v_44) (and (and (= x_83 1) (= x_28 x_31)) (= x_36 ?v_45)))) (= x_37 x_29)) (= x_8 x_4)) (= x_10 x_6)) (= x_40 x_32)) ?v_46))) (or (or (and (and (and (= x_84 0) ?v_52) (or (not (<= x_33 ?v_48)) (= x_37 x_28))) ?v_49) (and (and (and (= x_84 1) ?v_47) (xor x_28 x_36)) (= x_41 ?v_53))) (and (and (and (= x_84 2) ?v_47) (= x_28 x_36)) ?v_49))) (or (or (and (and (and (= x_85 0) (not ?v_50)) (or (not (<= x_35 ?v_42)) (= x_38 x_5))) ?v_51) (and (and (and (= x_85 1) ?v_50) (xor x_5 x_9)) (= x_43 (+ ?v_42 x_79)))) (and (and (and (= x_85 2) ?v_50) (= x_5 x_9)) ?v_51))) (or (or (and (and (and (= x_86 0) ?v_52) (or (not (<= x_70 ?v_48)) (= x_10 x_7))) ?v_55) (and (and (and (= x_86 1) ?v_47) (not ?v_54)) (= x_81 ?v_53))) (and (and (and (= x_86 2) ?v_47) ?v_54) ?v_55))) (or (and (and (and (and (and (and (and (and (and (= x_75 0) (= x_4 x_21)) (= ?v_56 x_24)) (<= (+ ?v_56 x_72) x_32)) (or ?v_60 (= x_5 x_0))) (= x_30 x_22)) (= x_31 x_23)) (= x_34 x_26)) ?v_57) ?v_58) (and (and (and (and (and (and (and (and (and (= x_75 1) (= x_31 x_22)) (= ?v_56 x_26)) (<= (+ ?v_56 x_73) x_34)) (or (and (and (= x_76 0) ?v_57) ?v_58) (and (and (= x_76 1) (= x_20 x_23)) (= x_28 ?v_59)))) (= x_29 x_21)) (= x_4 x_0)) (= x_6 x_2)) (= x_32 x_24)) ?v_60))) (or (or (and (and (and (= x_77 0) ?v_66) (or (not (<= x_25 ?v_62)) (= x_29 x_20))) ?v_63) (and (and (and (= x_77 1) ?v_61) (xor x_20 x_28)) (= x_33 ?v_67))) (and (and (and (= x_77 2) ?v_61) (= x_20 x_28)) ?v_63))) (or (or (and (and (and (= x_78 0) (not ?v_64)) (or (not (<= x_27 ?v_56)) (= x_30 x_1))) ?v_65) (and (and (and (= x_78 1) ?v_64) (xor x_1 x_5)) (= x_35 (+ ?v_56 x_79)))) (and (and (and (= x_78 2) ?v_64) (= x_1 x_5)) ?v_65))) (or (or (and (and (and (= x_80 0) ?v_66) (or (not (<= x_71 ?v_62)) (= x_6 x_3))) ?v_69) (and (and (and (= x_80 1) ?v_61) (not ?v_68)) (= x_70 ?v_67))) (and (and (and (= x_80 2) ?v_61) ?v_68) ?v_69))) ?v_70) (not (= x_103 x_100)))))))))))
(check-sat)
(exit)
