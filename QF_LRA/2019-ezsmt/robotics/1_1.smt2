(set-info :smt-lib-version 2.6)
(set-logic QF_LRA)
(set-info :source |
Generated by: Da Shen, Yuliya Lierler
Generated on: 2019-04-29
Generator: EZSMT+
Application: SMT-based Constraint Answer Set Solver EZSMT+ for Non-tight Programs [1]

[1] Da Shen and Yuliya Lierler. "SMT-based Constraint Answer Set Solver EZSMT+ for Non-tight Programs"
    16th International Conference on Principles of Knowledge Representation and Reasoning (2018)
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; --- END HEADER ---

; --- Including necessary SMT functions ---

(define-fun max ((x Real) (y Real)) Real
  (ite (< x y) y x))

(define-fun min ((x Real) (y Real)) Real
  (ite (< x y) x y))

; --- END INCLUDES ---

(declare-fun |cspvar(v_final(y(r),2))| () Bool)
(declare-fun |step(1)| () Bool)
(declare-fun |pioneer_param(r,vm,27.29)| () Bool)
(declare-fun |required(ezcsp__eq(tend(2),40.33404215))| () Bool)
(declare-fun |state(turn_r)| () Bool)
(declare-fun |132| () Bool)
(declare-fun |131| () Bool)
(declare-fun |required(ezcsp__geq(tstart(0),0))| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(y(r),2),v_final(y(r),2)))| () Bool)
(declare-fun |goal(2)| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(y(r),0),0))| () Bool)
(declare-fun |o(stop(r,fwd),2)| () Bool)
(declare-fun |cspvar(v_final(b_lvl(r),2))| () Bool)
(declare-fun |o(stop(r,turn_l),0)| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(b_lvl(r),2),v_final(b_lvl(r),2)))| () Bool)
(declare-fun |action(agent,stop(r,fwd))| () Bool)
(declare-fun |o(stop(r,turn_l),1)| () Bool)
(declare-fun |action(exogenous,battery_drop(r))| () Bool)
(declare-fun |required(ezcsp__eq(v_final(x(r),2),80))| () Bool)
(declare-fun |cspvar(v_initial(x(r),0))| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(y(r),2),v_final(y(r),1)))| () Bool)
(declare-fun |cspvar(v_initial(dir(r),1))| () Bool)
(declare-fun |o(stop(r,turn_r),0)| () Bool)
(declare-fun |required(ezcsp__geq(tend(1),0))| () Bool)
(declare-fun |required(ezcsp__eq(tstart(1),tend(0)))| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(dir(r),2),v_final(dir(r),2)))| () Bool)
(declare-fun |o(battery_drop(r),1)| () Bool)
(declare-fun |pioneer_param(r,vm_a,17.33)| () Bool)
(declare-fun |cspvar(v_final(dir(r),0))| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(b_lvl(r),0),v_final(b_lvl(r),0)))| () Bool)
(declare-fun |required(ezcsp__eq(v_final(x(r),2),150))| () Bool)
(declare-fun |fluent(inertial,state(r,fwd))| () Bool)
(declare-fun |h(state(r,turn_r),2)| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(dir(r),1),v_final(dir(r),0)))| () Bool)
(declare-fun |cspvar(v_final(y(r),0))| () Bool)
(declare-fun |fluent(numerical,dir(r))| () Bool)
(declare-fun |cspvar(v_final(dir(r),1))| () Bool)
(declare-fun |obs(v_final(x(r),2),80)| () Bool)
(declare-fun |fluent(numerical,b_lvl(r))| () Bool)
(declare-fun |required(ezcsp__leq(ezcsp__mn(v_final(dir(r),2),v_initial(dir(r),2)),180))| () Bool)
(declare-fun |o(stop(r,turn_r),1)| () Bool)
(declare-fun |o(battery_drop(r),0)| () Bool)
(declare-fun |cspdomain(r)| () Bool)
(declare-fun |fluent(numerical,y(r))| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(x(r),1),v_final(x(r),0)))| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(y(r),1),v_final(y(r),0)))| () Bool)
(declare-fun |h(state(r,turn_l),0)| () Bool)
(declare-fun |mov_state(turn_r)| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(x(r),2),v_final(x(r),2)))| () Bool)
(declare-fun |required(ezcsp__geq(tstart(2),0))| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(x(r),2),v_final(x(r),1)))| () Bool)
(declare-fun |action(agent,stop(r,turn_r))| () Bool)
(declare-fun |cspvar(v_initial(b_lvl(r),2))| () Bool)
(declare-fun |cspvar(tstart(1))| () Bool)
(declare-fun |cspvar(v_final(b_lvl(r),0))| () Bool)
(declare-fun |cspvar(tend(0))| () Bool)
(declare-fun |state(turn_l)| () Bool)
(declare-fun |cspvar(v_initial(y(r),1))| () Bool)
(declare-fun |cspvar(tstart(2))| () Bool)
(declare-fun |mov_state(fwd)| () Bool)
(declare-fun |fluent(inertial,state(r,turn_r))| () Bool)
(declare-fun |cspvar(v_final(x(r),0))| () Bool)
(declare-fun |h(state(r,turn_l),1)| () Bool)
(declare-fun |robot(r)| () Bool)
(declare-fun |cspvar(v_initial(b_lvl(r),1))| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(b_lvl(r),1),v_final(b_lvl(r),0)))| () Bool)
(declare-fun |o(stop(r,turn_r),2)| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(x(r),0),0))| () Bool)
(declare-fun |mov_state(turn_l)| () Bool)
(declare-fun |state(fwd)| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(dir(r),1),v_final(dir(r),1)))| () Bool)
(declare-fun |required(ezcsp__geq(tend(2),0))| () Bool)
(declare-fun |pioneer_param(r,ap,50.15)| () Bool)
(declare-fun |h(state(r,stopped),2)| () Bool)
(declare-fun |h(state(r,turn_r),1)| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(x(r),0),v_final(x(r),0)))| () Bool)
(declare-fun |h(state(r,turn_l),2)| () Bool)
(declare-fun |required(ezcsp__leq(180,ezcsp__mn(v_initial(dir(r),2),v_final(dir(r),2))))| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(b_lvl(r),0),1))| () Bool)
(declare-fun |o(battery_drop(r),2)| () Bool)
(declare-fun |cspvar(v_final(dir(r),2))| () Bool)
(declare-fun |step(2)| () Bool)
(declare-fun |cspvar(v_initial(dir(r),0))| () Bool)
(declare-fun |required(ezcsp__eq(tstart(2),tend(1)))| () Bool)
(declare-fun |fluent(inertial,state(r,turn_l))| () Bool)
(declare-fun |h(state(r,stopped),1)| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(b_lvl(r),1),v_final(b_lvl(r),1)))| () Bool)
(declare-fun |required(ezcsp__geq(tend(0),0))| () Bool)
(declare-fun |required(ezcsp__geq(tend(1),tstart(1)))| () Bool)
(declare-fun |h(state(r,fwd),2)| () Bool)
(declare-fun |required(ezcsp__geq(tstart(1),0))| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(y(r),1),v_final(y(r),1)))| () Bool)
(declare-fun |o(stop(r,fwd),1)| () Bool)
(declare-fun |h(state(r,turn_r),0)| () Bool)
(declare-fun |cspvar(v_initial(x(r),2))| () Bool)
(declare-fun |cspvar(v_initial(y(r),2))| () Bool)
(declare-fun |required(ezcsp__eq(v_final(y(r),2),0))| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(y(r),0),v_final(y(r),0)))| () Bool)
(declare-fun |action(agent,stop(r,turn_l))| () Bool)
(declare-fun |cspvar(v_final(y(r),1))| () Bool)
(declare-fun |obs(v_final(y(r),2),0)| () Bool)
(declare-fun |cspvar(v_final(x(r),2))| () Bool)
(declare-fun |action(agent,start(r,fwd))| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(dir(r),0),v_final(dir(r),0)))| () Bool)
(declare-fun |required(ezcsp__geq(tend(2),tstart(2)))| () Bool)
(declare-fun |h(state(r,stopped),0)| () Bool)
(declare-fun |state(stopped)| () Bool)
(declare-fun |fluent(numerical,x(r))| () Bool)
(declare-fun |required(ezcsp__eq(v_final(y(r),2),150))| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(dir(r),0),0))| () Bool)
(declare-fun |h(state(r,fwd),1)| () Bool)
(declare-fun |o(stop(r,fwd),0)| () Bool)
(declare-fun |cspvar(v_initial(x(r),1))| () Bool)
(declare-fun |action(agent,start(r,turn_r))| () Bool)
(declare-fun |o(stop(r,turn_l),2)| () Bool)
(declare-fun |step(0)| () Bool)
(declare-fun |cspvar(tend(1))| () Bool)
(declare-fun |required(ezcsp__eq(tstart(0),0))| () Bool)
(declare-fun |cspvar(v_final(b_lvl(r),1))| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(b_lvl(r),2),v_final(b_lvl(r),1)))| () Bool)
(declare-fun |cspvar(v_initial(y(r),0))| () Bool)
(declare-fun |h(state(r,fwd),0)| () Bool)
(declare-fun |cspvar(tend(2))| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(x(r),1),v_final(x(r),1)))| () Bool)
(declare-fun |cspvar(v_initial(dir(r),2))| () Bool)
(declare-fun |required(ezcsp__geq(tend(0),tstart(0)))| () Bool)
(declare-fun |action(agent,start(r,turn_l))| () Bool)
(declare-fun |cspvar(tstart(0))| () Bool)
(declare-fun |cspvar(v_final(x(r),1))| () Bool)
(declare-fun |cspvar(v_initial(b_lvl(r),0))| () Bool)
(declare-fun |fluent(inertial,state(r,stopped))| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(dir(r),2),v_final(dir(r),1)))| () Bool)
(assert |obs(v_final(x(r),2),80)|)
(assert |obs(v_final(y(r),2),0)|)
(assert |required(ezcsp__eq(tend(2),40.33404215))|)
(assert |robot(r)|)
(assert |h(state(r,stopped),0)|)
(assert |required(ezcsp__eq(tstart(0),0))|)
(assert |pioneer_param(r,vm,27.29)|)
(assert |pioneer_param(r,ap,50.15)|)
(assert |pioneer_param(r,vm_a,17.33)|)
(assert |cspdomain(r)|)
(assert |state(fwd)|)
(assert |state(stopped)|)
(assert |state(turn_l)|)
(assert |state(turn_r)|)
(assert |step(0)|)
(assert |step(1)|)
(assert |step(2)|)
(assert |required(ezcsp__eq(v_initial(x(r),0),0))|)
(assert |required(ezcsp__eq(v_initial(y(r),0),0))|)
(assert |required(ezcsp__eq(v_initial(dir(r),0),0))|)
(assert |required(ezcsp__eq(v_initial(b_lvl(r),0),1))|)
(assert |mov_state(fwd)|)
(assert |mov_state(turn_l)|)
(assert |mov_state(turn_r)|)
(assert |fluent(inertial,state(r,fwd))|)
(assert |fluent(inertial,state(r,stopped))|)
(assert |fluent(inertial,state(r,turn_l))|)
(assert |fluent(inertial,state(r,turn_r))|)
(assert |h(state(r,stopped),1)|)
(assert |h(state(r,stopped),2)|)
(assert (not |h(state(r,fwd),0)|))
(assert (not |h(state(r,turn_l),0)|))
(assert (not |h(state(r,turn_r),0)|))
(assert (not |h(state(r,fwd),1)|))
(assert (not |h(state(r,turn_l),1)|))
(assert (not |h(state(r,turn_r),1)|))
(assert (not |h(state(r,fwd),2)|))
(assert (not |h(state(r,turn_l),2)|))
(assert (not |h(state(r,turn_r),2)|))
(assert |goal(2)|)
(assert |required(ezcsp__eq(v_final(x(r),2),150))|)
(assert |required(ezcsp__eq(v_final(y(r),2),150))|)
(assert |required(ezcsp__leq(180,ezcsp__mn(v_initial(dir(r),2),v_final(dir(r),2))))|)
(assert |required(ezcsp__leq(ezcsp__mn(v_final(dir(r),2),v_initial(dir(r),2)),180))|)
(assert |fluent(numerical,x(r))|)
(assert |fluent(numerical,y(r))|)
(assert |fluent(numerical,dir(r))|)
(assert |fluent(numerical,b_lvl(r))|)
(assert |action(agent,start(r,fwd))|)
(assert |action(agent,start(r,turn_l))|)
(assert |action(agent,start(r,turn_r))|)
(assert |action(agent,stop(r,fwd))|)
(assert |action(agent,stop(r,turn_l))|)
(assert |action(agent,stop(r,turn_r))|)
(assert |action(exogenous,battery_drop(r))|)
(assert |cspvar(v_initial(x(r),0))|)
(assert |cspvar(v_initial(x(r),1))|)
(assert |cspvar(v_initial(x(r),2))|)
(assert |cspvar(v_initial(y(r),0))|)
(assert |cspvar(v_initial(y(r),1))|)
(assert |cspvar(v_initial(y(r),2))|)
(assert |cspvar(v_initial(dir(r),0))|)
(assert |cspvar(v_initial(dir(r),1))|)
(assert |cspvar(v_initial(dir(r),2))|)
(assert |cspvar(v_initial(b_lvl(r),0))|)
(assert |cspvar(v_initial(b_lvl(r),1))|)
(assert |cspvar(v_initial(b_lvl(r),2))|)
(assert |cspvar(v_final(x(r),0))|)
(assert |cspvar(v_final(x(r),1))|)
(assert |cspvar(v_final(x(r),2))|)
(assert |cspvar(v_final(y(r),0))|)
(assert |cspvar(v_final(y(r),1))|)
(assert |cspvar(v_final(y(r),2))|)
(assert |cspvar(v_final(dir(r),0))|)
(assert |cspvar(v_final(dir(r),1))|)
(assert |cspvar(v_final(dir(r),2))|)
(assert |cspvar(v_final(b_lvl(r),0))|)
(assert |cspvar(v_final(b_lvl(r),1))|)
(assert |cspvar(v_final(b_lvl(r),2))|)
(assert |cspvar(tstart(0))|)
(assert |cspvar(tstart(1))|)
(assert |cspvar(tstart(2))|)
(assert |required(ezcsp__geq(tstart(0),0))|)
(assert |required(ezcsp__geq(tstart(1),0))|)
(assert |required(ezcsp__geq(tstart(2),0))|)
(assert |cspvar(tend(0))|)
(assert |cspvar(tend(1))|)
(assert |cspvar(tend(2))|)
(assert |required(ezcsp__geq(tend(0),0))|)
(assert |required(ezcsp__geq(tend(1),0))|)
(assert |required(ezcsp__geq(tend(2),0))|)
(assert |required(ezcsp__eq(tstart(1),tend(0)))|)
(assert |required(ezcsp__eq(tstart(2),tend(1)))|)
(assert |required(ezcsp__geq(tend(0),tstart(0)))|)
(assert |required(ezcsp__geq(tend(1),tstart(1)))|)
(assert |required(ezcsp__geq(tend(2),tstart(2)))|)
(assert |required(ezcsp__eq(v_initial(x(r),1),v_final(x(r),0)))|)
(assert |required(ezcsp__eq(v_initial(x(r),2),v_final(x(r),1)))|)
(assert |required(ezcsp__eq(v_initial(y(r),1),v_final(y(r),0)))|)
(assert |required(ezcsp__eq(v_initial(y(r),2),v_final(y(r),1)))|)
(assert |required(ezcsp__eq(v_initial(dir(r),1),v_final(dir(r),0)))|)
(assert |required(ezcsp__eq(v_initial(dir(r),2),v_final(dir(r),1)))|)
(assert |required(ezcsp__eq(v_initial(b_lvl(r),1),v_final(b_lvl(r),0)))|)
(assert |required(ezcsp__eq(v_initial(b_lvl(r),2),v_final(b_lvl(r),1)))|)
(assert |required(ezcsp__eq(v_initial(x(r),0),v_final(x(r),0)))|)
(assert |required(ezcsp__eq(v_initial(x(r),1),v_final(x(r),1)))|)
(assert |required(ezcsp__eq(v_initial(x(r),2),v_final(x(r),2)))|)
(assert |required(ezcsp__eq(v_initial(y(r),0),v_final(y(r),0)))|)
(assert |required(ezcsp__eq(v_initial(y(r),1),v_final(y(r),1)))|)
(assert |required(ezcsp__eq(v_initial(y(r),2),v_final(y(r),2)))|)
(assert |required(ezcsp__eq(v_initial(dir(r),0),v_final(dir(r),0)))|)
(assert |required(ezcsp__eq(v_initial(dir(r),1),v_final(dir(r),1)))|)
(assert |required(ezcsp__eq(v_initial(dir(r),2),v_final(dir(r),2)))|)
(assert |required(ezcsp__eq(v_initial(b_lvl(r),0),v_final(b_lvl(r),0)))|)
(assert |required(ezcsp__eq(v_initial(b_lvl(r),1),v_final(b_lvl(r),1)))|)
(assert |required(ezcsp__eq(v_initial(b_lvl(r),2),v_final(b_lvl(r),2)))|)
(assert (not |o(stop(r,fwd),0)|))
(assert (not |o(stop(r,turn_l),0)|))
(assert (not |o(stop(r,turn_r),0)|))
(assert (not |o(stop(r,fwd),1)|))
(assert (not |o(stop(r,turn_l),1)|))
(assert (not |o(stop(r,turn_r),1)|))
(assert (not |o(stop(r,fwd),2)|))
(assert (not |o(stop(r,turn_l),2)|))
(assert (not |o(stop(r,turn_r),2)|))
(assert (not |o(battery_drop(r),0)|))
(assert (not |o(battery_drop(r),1)|))
(assert (not |o(battery_drop(r),2)|))
(assert |required(ezcsp__eq(v_final(x(r),2),80))|)
(assert |required(ezcsp__eq(v_final(y(r),2),0))|)
(assert (not |131|))
(assert |132|)
(declare-fun |v_final(y(r),2)| () Real)

(declare-fun |v_final(b_lvl(r),2)| () Real)

(declare-fun |v_initial(x(r),0)| () Real)

(declare-fun |v_initial(dir(r),1)| () Real)

(declare-fun |v_final(dir(r),0)| () Real)

(declare-fun |v_final(y(r),0)| () Real)

(declare-fun |v_final(dir(r),1)| () Real)

(declare-fun |v_initial(b_lvl(r),2)| () Real)

(declare-fun |tstart(1)| () Real)

(declare-fun |v_final(b_lvl(r),0)| () Real)

(declare-fun |tend(0)| () Real)

(declare-fun |v_initial(y(r),1)| () Real)

(declare-fun |tstart(2)| () Real)

(declare-fun |v_final(x(r),0)| () Real)

(declare-fun |v_initial(b_lvl(r),1)| () Real)

(declare-fun |v_final(dir(r),2)| () Real)

(declare-fun |v_initial(dir(r),0)| () Real)

(declare-fun |v_initial(x(r),2)| () Real)

(declare-fun |v_initial(y(r),2)| () Real)

(declare-fun |v_final(y(r),1)| () Real)

(declare-fun |v_final(x(r),2)| () Real)

(declare-fun |v_initial(x(r),1)| () Real)

(declare-fun |tend(1)| () Real)

(declare-fun |v_final(b_lvl(r),1)| () Real)

(declare-fun |v_initial(y(r),0)| () Real)

(declare-fun |tend(2)| () Real)

(declare-fun |v_initial(dir(r),2)| () Real)

(declare-fun |tstart(0)| () Real)

(declare-fun |v_final(x(r),1)| () Real)

(declare-fun |v_initial(b_lvl(r),0)| () Real)

(assert (=> |required(ezcsp__eq(tend(2),40.33404215))| (= |tend(2)|  40.33404215)))
(assert (=> |required(ezcsp__geq(tstart(0),0))| (>= |tstart(0)|  0)))
(assert (=> |required(ezcsp__eq(v_initial(y(r),2),v_final(y(r),2)))| (= |v_initial(y(r),2)|  |v_final(y(r),2)| )))
(assert (=> |required(ezcsp__eq(v_initial(y(r),0),0))| (= |v_initial(y(r),0)|  0)))
(assert (=> |required(ezcsp__eq(v_initial(b_lvl(r),2),v_final(b_lvl(r),2)))| (= |v_initial(b_lvl(r),2)|  |v_final(b_lvl(r),2)| )))
(assert (=> |required(ezcsp__eq(v_final(x(r),2),80))| (= |v_final(x(r),2)|  80)))
(assert (=> |required(ezcsp__eq(v_initial(y(r),2),v_final(y(r),1)))| (= |v_initial(y(r),2)|  |v_final(y(r),1)| )))
(assert (=> |required(ezcsp__geq(tend(1),0))| (>= |tend(1)|  0)))
(assert (=> |required(ezcsp__eq(tstart(1),tend(0)))| (= |tstart(1)|  |tend(0)| )))
(assert (=> |required(ezcsp__eq(v_initial(dir(r),2),v_final(dir(r),2)))| (= |v_initial(dir(r),2)|  |v_final(dir(r),2)| )))
(assert (=> |required(ezcsp__eq(v_initial(b_lvl(r),0),v_final(b_lvl(r),0)))| (= |v_initial(b_lvl(r),0)|  |v_final(b_lvl(r),0)| )))
(assert (=> |required(ezcsp__eq(v_final(x(r),2),150))| (= |v_final(x(r),2)|  150)))
(assert (=> |required(ezcsp__eq(v_initial(dir(r),1),v_final(dir(r),0)))| (= |v_initial(dir(r),1)|  |v_final(dir(r),0)| )))
(assert (=> |required(ezcsp__leq(ezcsp__mn(v_final(dir(r),2),v_initial(dir(r),2)),180))| (<=(- |v_final(dir(r),2)|  |v_initial(dir(r),2)| ) 180)))
(assert (=> |required(ezcsp__eq(v_initial(x(r),1),v_final(x(r),0)))| (= |v_initial(x(r),1)|  |v_final(x(r),0)| )))
(assert (=> |required(ezcsp__eq(v_initial(y(r),1),v_final(y(r),0)))| (= |v_initial(y(r),1)|  |v_final(y(r),0)| )))
(assert (=> |required(ezcsp__eq(v_initial(x(r),2),v_final(x(r),2)))| (= |v_initial(x(r),2)|  |v_final(x(r),2)| )))
(assert (=> |required(ezcsp__geq(tstart(2),0))| (>= |tstart(2)|  0)))
(assert (=> |required(ezcsp__eq(v_initial(x(r),2),v_final(x(r),1)))| (= |v_initial(x(r),2)|  |v_final(x(r),1)| )))
(assert (=> |required(ezcsp__eq(v_initial(b_lvl(r),1),v_final(b_lvl(r),0)))| (= |v_initial(b_lvl(r),1)|  |v_final(b_lvl(r),0)| )))
(assert (=> |required(ezcsp__eq(v_initial(x(r),0),0))| (= |v_initial(x(r),0)|  0)))
(assert (=> |required(ezcsp__eq(v_initial(dir(r),1),v_final(dir(r),1)))| (= |v_initial(dir(r),1)|  |v_final(dir(r),1)| )))
(assert (=> |required(ezcsp__geq(tend(2),0))| (>= |tend(2)|  0)))
(assert (=> |required(ezcsp__eq(v_initial(x(r),0),v_final(x(r),0)))| (= |v_initial(x(r),0)|  |v_final(x(r),0)| )))
(assert (=> |required(ezcsp__leq(180,ezcsp__mn(v_initial(dir(r),2),v_final(dir(r),2))))| (<= 180(- |v_initial(dir(r),2)|  |v_final(dir(r),2)| ))))
(assert (=> |required(ezcsp__eq(v_initial(b_lvl(r),0),1))| (= |v_initial(b_lvl(r),0)|  1)))
(assert (=> |required(ezcsp__eq(tstart(2),tend(1)))| (= |tstart(2)|  |tend(1)| )))
(assert (=> |required(ezcsp__eq(v_initial(b_lvl(r),1),v_final(b_lvl(r),1)))| (= |v_initial(b_lvl(r),1)|  |v_final(b_lvl(r),1)| )))
(assert (=> |required(ezcsp__geq(tend(0),0))| (>= |tend(0)|  0)))
(assert (=> |required(ezcsp__geq(tend(1),tstart(1)))| (>= |tend(1)|  |tstart(1)| )))
(assert (=> |required(ezcsp__geq(tstart(1),0))| (>= |tstart(1)|  0)))
(assert (=> |required(ezcsp__eq(v_initial(y(r),1),v_final(y(r),1)))| (= |v_initial(y(r),1)|  |v_final(y(r),1)| )))
(assert (=> |required(ezcsp__eq(v_final(y(r),2),0))| (= |v_final(y(r),2)|  0)))
(assert (=> |required(ezcsp__eq(v_initial(y(r),0),v_final(y(r),0)))| (= |v_initial(y(r),0)|  |v_final(y(r),0)| )))
(assert (=> |required(ezcsp__eq(v_initial(dir(r),0),v_final(dir(r),0)))| (= |v_initial(dir(r),0)|  |v_final(dir(r),0)| )))
(assert (=> |required(ezcsp__geq(tend(2),tstart(2)))| (>= |tend(2)|  |tstart(2)| )))
(assert (=> |required(ezcsp__eq(v_final(y(r),2),150))| (= |v_final(y(r),2)|  150)))
(assert (=> |required(ezcsp__eq(v_initial(dir(r),0),0))| (= |v_initial(dir(r),0)|  0)))
(assert (=> |required(ezcsp__eq(tstart(0),0))| (= |tstart(0)|  0)))
(assert (=> |required(ezcsp__eq(v_initial(b_lvl(r),2),v_final(b_lvl(r),1)))| (= |v_initial(b_lvl(r),2)|  |v_final(b_lvl(r),1)| )))
(assert (=> |required(ezcsp__eq(v_initial(x(r),1),v_final(x(r),1)))| (= |v_initial(x(r),1)|  |v_final(x(r),1)| )))
(assert (=> |required(ezcsp__geq(tend(0),tstart(0)))| (>= |tend(0)|  |tstart(0)| )))
(assert (=> |required(ezcsp__eq(v_initial(dir(r),2),v_final(dir(r),1)))| (= |v_initial(dir(r),2)|  |v_final(dir(r),1)| )))

; Check satisfiability
(check-sat)
(exit)
